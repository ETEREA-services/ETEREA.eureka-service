name: Generate Documentation

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

permissions:
  contents: write
  pages: write
  id-token: write
  issues: read
  pull-requests: read

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Project Documentation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p docs
          
          echo "Fetching project information from GitHub API..."
          curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.repository }}/milestones" > milestones.json
          curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.repository }}/issues?state=all&per_page=100" > issues.json
          
          cat > docs/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="es">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Eterea Eureka Service - DocumentaciÃ³n del Proyecto</title>
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; max-width: 1200px; margin: 0 auto; padding: 20px; background-color: #f5f5f5; }
                  .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 2rem; border-radius: 10px; margin-bottom: 2rem; box-shadow: 0 4px 6px rgba(0,0,0,0.1); }
                  .milestone { background: white; padding: 1.5rem; margin-bottom: 1.5rem; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
                  .issue { background: #f8f9fa; padding: 1rem; margin: 0.5rem 0; border-left: 4px solid #667eea; border-radius: 4px; }
                  .label { display: inline-block; padding: 0.25rem 0.5rem; border-radius: 3px; font-size: 0.85rem; margin-right: 0.5rem; color: black; }
                  .stats { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; margin-bottom: 2rem; }
                  .stat-card { background: white; padding: 1.5rem; border-radius: 8px; text-align: center; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
                  .stat-number { font-size: 2rem; font-weight: bold; color: #667eea; }
                  .progress-bar { width: 100%; height: 20px; background: #e9ecef; border-radius: 10px; overflow: hidden; }
                  .progress-fill { height: 100%; background: #28a745; transition: width 0.3s ease; }
              </style>
          </head>
          <body>
              <div class="header">
                  <h1>ðŸ“‹ Eterea Eureka Service - DocumentaciÃ³n del Proyecto</h1>
                  <p>Servicio de Registro y Descubrimiento en el Ecosistema Eterea</p>
                  <p>Ãšltima actualizaciÃ³n: <span id="update-date"></span></p>
              </div>
              <div id="stats" class="stats"></div>
              <div id="milestones"></div>
              <script>
                  document.getElementById('update-date').textContent = new Date().toLocaleString('es-AR');
              </script>
          </body>
          </html>
          EOF
          
          cat > docs/data.js << EOF
          const milestonesData = $(cat milestones.json);
          const issuesData = $(cat issues.json);
          EOF
          
          cat >> docs/index.html << 'EOF'
          <script src="data.js"></script>
          <script>
              const totalIssues = issuesData.length;
              const openIssues = issuesData.filter(i => i.state === 'open').length;
              const closedIssues = issuesData.filter(i => i.state === 'closed').length;
              const progress = totalIssues > 0 ? Math.round((closedIssues / totalIssues) * 100) : 0;
          
              const statsHTML = `
                  <div class="stat-card"><div class="stat-number">${totalIssues}</div><div>Total Issues</div></div>
                  <div class="stat-card"><div class="stat-number">${openIssues}</div><div>Issues Abiertos</div></div>
                  <div class="stat-card"><div class="stat-number">${closedIssues}</div><div>Issues Cerrados</div></div>
                  <div class="stat-card"><div class="stat-number">${progress}%</div><div>Progreso</div><div class="progress-bar" style="margin-top: 10px;"><div class="progress-fill" style="width: ${progress}%"></div></div></div>
              `;
              document.getElementById('stats').innerHTML = statsHTML;
          
              let milestonesHTML = '';
              milestonesData.forEach(milestone => {
                  const milestoneIssues = issuesData.filter(i => i.milestone && i.milestone.id === milestone.id);
                  const openCount = milestoneIssues.filter(i => i.state === 'open').length;
                  const totalCount = milestoneIssues.length;
          
                  milestonesHTML += `
                      <div class="milestone">
                          <h2>${milestone.title}</h2>
                          <p>${milestone.description || 'Sin descripciÃ³n'}</p>
                          <p><strong>Fecha lÃ­mite:</strong> ${milestone.due_on ? new Date(milestone.due_on).toLocaleDateString('es-AR') : 'No definida'}</p>
                          <p><strong>Progreso:</strong> ${totalCount > 0 ? ((totalCount - openCount) / totalCount * 100) : 0}%</p>
                          <div class="progress-bar"><div class="progress-fill" style="width: ${totalCount > 0 ? ((totalCount - openCount) / totalCount * 100) : 0}%"></div></div>
                          <h3>Issues:</h3>
                          ${milestoneIssues.map(issue => `
                              <div class="issue">
                                  <strong>#${issue.number} - ${issue.title}</strong>
                                  ${issue.labels.map(label => `<span class="label" style="background-color: #${label.color};">${label.name}</span>`).join('')}
                                  <span style="float: right; color: ${issue.state === 'open' ? '#dc3545' : '#28a745'}">${issue.state === 'open' ? 'ðŸ”´ Abierto' : 'âœ… Cerrado'}</span>
                              </div>
                          `).join('')}
                      </div>
                  `;
              });
          
              const noMilestoneIssues = issuesData.filter(i => !i.milestone);
              if (noMilestoneIssues.length > 0) {
                  milestonesHTML += `
                      <div class="milestone">
                          <h2>Issues sin Milestone</h2>
                          ${noMilestoneIssues.map(issue => `
                              <div class="issue">
                                  <strong>#${issue.number} - ${issue.title}</strong>
                                  ${issue.labels.map(label => `<span class="label" style="background-color: #${label.color};">${label.name}</span>`).join('')}
                                  <span style="float: right; color: ${issue.state === 'open' ? '#dc3545' : '#28a745'}">${issue.state === 'open' ? 'ðŸ”´ Abierto' : 'âœ… Cerrado'}</span>
                              </div>
                          `).join('')}
                      </div>
                  `;
              }
              document.getElementById('milestones').innerHTML = milestonesHTML;
          </script>
          EOF

      - name: Generate Wiki Content
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          
          git clone https://github.com/${{ github.repository }}.wiki.git wiki || {
              mkdir wiki
              cd wiki
              git init
              git remote add origin https://github.com/${{ github.repository }}.wiki.git
              git checkout -b main
              cd ..
          }
          
          cd wiki
          
          cat > Home.md << 'EOF'
          # ðŸ“‹ Eterea Eureka Service - Wiki del Proyecto
          Bienvenido a la wiki del proyecto. Esta documentaciÃ³n se genera y actualiza automÃ¡ticamente.
          ## ðŸ“Š Estado del Proyecto
          Ãšltima actualizaciÃ³n: $(date '+%Y-%m-%d %H:%M:%S')
          ## ðŸŽ¯ Milestones
          EOF
          
          jq -r '.[] | "### " + .title + "\n\n" + (.description // "Sin descripciÃ³n") + "\n\n**Fecha lÃ­mite:** " + (if .due_on then .due_on else "No definida" end) + "\n\n---\n"' ../milestones.json >> Home.md
          
          cat > Project-Status.md << 'EOF'
          # Estado del Proyecto
          ## Resumen de Issues
          EOF
          
          echo "### Issues por Estado" >> Project-Status.md
          echo "- **Total:** $(jq '. | length' ../issues.json)" >> Project-Status.md
          echo "- **Abiertos:** $(jq '[.[] | select(.state=="open")] | length' ../issues.json)" >> Project-Status.md
          echo "- **Cerrados:** $(jq '[.[] | select(.state=="closed")] | length' ../issues.json)" >> Project-Status.md
          
          echo -e "\n### Issues por Etiqueta\n" >> Project-Status.md
          jq -r '[.[] | .labels[] | {name: .name, color: .color}] | group_by(.name) | map({label: .[0].name, color: .[0].color, count: length}) | .[] | "- <span style=\"background-color: #" + .color + "; color: black; padding: 2px 5px; border-radius: 3px;\">" + .label + "</span>: **" + (.count | tostring) + "**"' ../issues.json >> Project-Status.md || echo "No hay etiquetas"
          
          git add .
          git commit -m "Update wiki documentation from PR #${{ github.event.pull_request.number || 'direct-push' }}" || echo "No changes to commit"
          
          if [[ "${{ github.event.pull_request.head.repo.full_name }}" == "${{ github.repository }}" ]] || [[ "${{ github.event_name }}" == "push" ]]; then
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.wiki.git main || echo "Wiki push failed"
          fi

      - name: Upload artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

  deploy-pages:
    needs: generate-docs
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4